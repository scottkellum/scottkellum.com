---
// Component Imports
import BaseHead from '../components/BaseHead.astro';
import Shape from '../components/Shape.astro';
import Marquee from '../components/Marquee.astro';
// import BlogHeader from '../components/BlogHeader.astro';
// import BlogPostPreview from '../components/BlogPostPreview.astro';
import photos from '../data/photos.json'
import XElement from 'astro-xelement';


let rolls = photos.rolls;

const { H1 } = XElement

interface MarkdownFrontmatter {
	publishDate: number;
}

function rollID(t) {
  t = t.replaceAll('[', '');
  t = t.replaceAll(']', '');
  t = t.replaceAll(' ', '-');
  return t;
}

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = 'Scott Kellum';
let description = 'Founder, inventor, product designer, typographer, teacher, speaker, and photographer';
let permalink = 'https://scottkellum.com/';

// Data Fetching: List all Markdown posts in the repo.

let allPosts = await Astro.fetchContent('./posts/*.md');
allPosts = allPosts.sort((a, b) => new Date(b.publishDate).valueOf() - new Date(a.publishDate).valueOf());

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---

<html lang="en">
	<head>
		<BaseHead />
		<style global>
			html {
				background: var(--background);
				color: var(--text);
			}

			body {
				width: 100%;
				overflow-x: hidden;
			}

			main {
				width: 100%;
				overflow: hidden;
			}

			.lede {
				width: min(90vw, 40rem);
				margin-inline: auto;
			}
			.image {
				width: 80%;
				margin-inline: auto;
				mix-blend-mode: multiply;
				position: relative;
			}
			img {
				filter: contrast(0.6) brightness(1.3);
				mix-blend-mode: multiply;
			}
			figure figcaption {
				color: var(--primary);
				font-size: 0.8rem;
				margin-block-start: -1em;
				margin-inline-start: 1em;
				mix-blend-mode: multiply;
				font-style: italic;
			}
			.head {
				font-size: calc(1px * var(--bind) / 7.22);
				width: 90vw;
				font-family: var(--font-display);
				color: var(--primary);
				line-height: 1;
				top: 1em;
				position: absolute;
				overflow: hidden;
				transform: scale(1.15);
				mix-blend-mode: multiply;
			}
			.marquee {
				position: absolute;
				width: 100vw;
				inset-block-start: 0;
				transform: translateX(-30%);
				mix-blend-mode: multiply;
				white-space: nowrap;
				font-style: italic;
				color: var(--primary);
			}
			.section {
				white-space: nowrap;
				overflow: auto;
				overflow-y: none;
				margin-block: 4rem;
				display: flex;
				align-items: center;
				scrollbar-color: var(--primary) transparent;
			}
			.section::-webkit-scrollbar {
				inline-size: 0.333rem;
				block-size: 0.333rem;
				background-color: transparent;
			}
			.section::-webkit-scrollbar-thumb {
				border-radius: 1rem;
				background: var(--primary);
			}
			.section img {
				block-size: min(30rem, 80vh);
				inline-size: auto;
				margin-inline-end: 2rem;
				filter: none;
				opacity: 0.66;
				transition: opacity 0.5s ease-in-out;
				writing-mode: sideways-lr;
			}
			.section img:hover {
				opacity: 1;
			}
			.section-head {
				font-family: var(--font-display);
				color: var(--primary);
				line-height: 1;
				text-decoration: none;
				margin-inline-start: 2rem;
				margin-inline-end: -0.5ch;
				margin-block: 0;
				display: inline-block;
				font-size: min(3rem, 8vh);
				animation: 1s var(--tt-ease, linear) calc(-1s * var(--tt-bind, 500) / var(--tt-max, 1000)) 1 both paused var(--tt-key, none);
				--tt-key: section-head;
				--tt-max: 1200;
				--tt-ease: cubic-bezier(0,0,0.7,1);
			}
			@keyframes section-head {
				0% {
					font-size: 1rem;
				}
			}
			.section-head a {
				text-decoration: none;
			}
			@media (prefers-reduced-motion: no-preference) {
				.marquee {
					animation: marquee 30s linear infinite;
				}
			}
			@keyframes marquee {
				100% {
					transform: translateX(calc(-30% - 95.6rem));
				}
			}
			.shape {
				position: absolute;
				inset-block-start: -10rem;
				inset-inline-end: -10rem;

				width: 100%;
				color: var(--background-alt);
				mix-blend-mode: normal;
				z-index: -1;
			}
			@media (prefers-reduced-motion: no-preference) {
				.shape {
					animation: 30s linear infinite shape;
				}
			}
			@keyframes shape {
				0% {
					transform: rotate(0deg);
				}
				100% {
					transform: rotate(180deg);
				}
			}
			@media (min-width: 45.5em) {
				.image {
					width: calc(40% + 3rem);
					float: inline-end;
					margin-inline-start: 1rem;
					margin-inline-end: -3rem;
					margin-block-end: 1rem;
					margin-block-start: -8rem;
				}
				.lede {
					position: relative;
				}
				.image::before {
					content: '';
					position: absolute;
					inset: -100% 3rem 0 auto;
					width: 1px;
					background: var(--primary);
					mix-blend-mode: multiply;
				}
				.marquee {
					inset-block-start: 3.5rem;
					color: var(--text);
				}
				.head {
					width: auto;
					margin-block-start: 10rem;
					margin-block-end: 1em;
					position: relative;
					transform: scale(1.3);
					top: 0;
				}
			}
		</style>
		<script>
			function resize() {
					document.documentElement.style.setProperty("--tt-bind", window.innerWidth)
			} resize(); window.onresize = resize;
		</script>
	</head>

	<body>
		<main>
			<article class="lede">
				<figure class="image">
					<img loading="lazy" src="/img/profile.jpg" alt="A photograph of Scott casually sitting on a curb">
					<figcaption>Photograph by <a href="https://tatebot.com/">Tate Tozer</a></figcaption>
				</figure>
				<H1 class="head" @resize={() => { this.style.setProperty('--bind', this.clientWidth) }}>
					Scott Kellum
				</H1>
				<p class="marquee">Invention • Innovation • Typography • Teaching • Editorial design • Design leadership • Photography • Product design • Design systems • Speaking •&nbsp;</p>
				<script>
					const marquee = document.querySelector('.marquee');
					marquee.innerHTML = marquee.innerText + `<span aria-hidden="true">${marquee.innerText}</span>`
				</script>
				<section class="about">
					<p>Scott Kellum is the founder of <a href="https://typetura.com">Typetura</a>, a typography as a service company offering both bespoke and ready-made typographic solutions. With over 15 years of design experience across type, editorial, digital, and print design; Scott’s experience gives him a unique perspective on the typographic challenges and opportunities in the design industry. He has invented multiple web technologies, holds two patents, and has contributed to major projects at <a href="https://voxmedia.com/">Vox Media</a>, <a href="https://www.dardenstudio.com/">Darden Studio</a>, and Roger Black Studio. These accomplishments include inventing <a href="https://patents.google.com/patent/US10769348B1/en">dynamic typographic systems</a>, <a href="https://www.adweek.com/programmatic/why-vox-media-chose-to-build-not-buy-a-programmatic-stack/">high impact ad formats</a>, <a href="https://developers.google.com/web/updates/2016/12/performant-parallaxing">new parallax techniques</a>, and the <a href="https://typetura.scottkellum.com/typetura-js">fluid typesetting technology</a> that powers Typetura itself.</p>
					<p><a href="https://twitter.com/scottkellum">Say hi on Twitter</a> or <a href="mailto:scott@scottkellum.com">shoot me an email</a>.</p>
				</section>
				<svg class="shape" viewBox="0 0 444 494" fill="none" xmlns="http://www.w3.org/2000/svg">
					<path d="M190 9.4752C209.802 -1.95729 234.198 -1.95729 254 9.47521L411.703 100.525C431.504 111.957 443.703 133.085 443.703 155.95V338.05C443.703 360.915 431.504 382.043 411.703 393.475L254 484.525C234.198 495.957 209.802 495.957 190 484.525L32.2975 393.475C12.4958 382.043 0.297501 360.915 0.297501 338.05V155.95C0.297501 133.085 12.4958 111.957 32.2975 100.525L190 9.4752Z" fill="currentColor"/>
				</svg>
			</article>

			<section class="section photos">
				<h1 class="section-head">
					<a href="/photos">Photos</a>
				</h1>
				{rolls.map((roll) => (
					<a href="/photos#${rollID(roll.title)}">
						<img loading="lazy" src="/photos/${roll.photos[0].src}" alt={roll.photos[0].alt}>
					</a>
				))}
			</section>
		</main>
	</body>
</html>
